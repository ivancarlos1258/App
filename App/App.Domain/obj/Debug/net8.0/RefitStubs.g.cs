// <auto-generated />
using System;
using System.Net.Http;
using System.Collections.Concurrent;
using System.Collections.Generic;
using System.Linq;
using G_BOV.Domain.DTOs.Auth;
using G_BOV.Domain.DTOs.Cidade;
using G_BOV.Domain.DTOs.Cliente;
using G_BOV.Domain.DTOs.Fazenda;
using G_BOV.Domain.DTOs.Fornecedor;
using G_BOV.Domain.DTOs.Grupo;
using G_BOV.Domain.DTOs.Picket;
using G_BOV.Domain.DTOs.Rebanho;
using G_BOV.Domain.DTOs.Usuario;
using G_BOV.Domain.Enums;
using Gridify;
using Refit;
using System.Security.Claims;

/* ******** Hey You! *********
 *
 * This is a generated file, and gets rewritten every time you build the
 * project. If you want to edit it, you need to edit the mustache template
 * in the Refit package */

#pragma warning disable
namespace RefitInternalGenerated
{
    [AttributeUsage (AttributeTargets.Class | AttributeTargets.Struct | AttributeTargets.Enum | AttributeTargets.Constructor | AttributeTargets.Method | AttributeTargets.Property | AttributeTargets.Field | AttributeTargets.Event | AttributeTargets.Interface | AttributeTargets.Delegate)]
    sealed class PreserveAttribute : Attribute
    {

        //
        // Fields
        //
        public bool AllMembers;

        public bool Conditional;
    }
}
#pragma warning restore

namespace G_BOV.Domain.HttpClient
{
    using RefitInternalGenerated;

    /// <inheritdoc />
    [Preserve]
    public partial class AutoGeneratedIApi : IApi
    {
        /// <inheritdoc />
        public HttpClient Client { get; protected set; }
        readonly ConcurrentDictionary<string, Func<HttpClient, object[], object>> methodImpls = new ConcurrentDictionary<string, Func<HttpClient, object[], object>>();
        readonly IRequestBuilder requestBuilder;

        public AutoGeneratedIApi(HttpClient client, IRequestBuilder requestBuilder)
        {
            Client = client;
            this.requestBuilder = requestBuilder;
        }

        /// <inheritdoc />
        public virtual Task<TokenGetDto> GetToken(Guid identificador)
        {
            var arguments = new object[] { identificador };
            var func = methodImpls.GetOrAdd("GetToken(Guid identificador)", _ => requestBuilder.BuildRestResultFuncForMethod("GetToken", new Type[] { typeof(Guid) }));
            return (Task<TokenGetDto>)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task<List<Claim>> Autenticar(LoginDto loginDto)
        {
            var arguments = new object[] { loginDto };
            var func = methodImpls.GetOrAdd("Autenticar(LoginDto loginDto)", _ => requestBuilder.BuildRestResultFuncForMethod("Autenticar", new Type[] { typeof(LoginDto) }));
            return (Task<List<Claim>>)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task SolicitarRecuperacaoSenha(RecuperacaoSenhaDto recuperacaoSenhaDto)
        {
            var arguments = new object[] { recuperacaoSenhaDto };
            var func = methodImpls.GetOrAdd("SolicitarRecuperacaoSenha(RecuperacaoSenhaDto recuperacaoSenhaDto)", _ => requestBuilder.BuildRestResultFuncForMethod("SolicitarRecuperacaoSenha", new Type[] { typeof(RecuperacaoSenhaDto) }));
            return (Task)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task RedefinirSenha(LoginDto loginDto)
        {
            var arguments = new object[] { loginDto };
            var func = methodImpls.GetOrAdd("RedefinirSenha(LoginDto loginDto)", _ => requestBuilder.BuildRestResultFuncForMethod("RedefinirSenha", new Type[] { typeof(LoginDto) }));
            return (Task)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task RedefinirSenhaComToken(RecuperacaoSenhaDto recuperacaoSenhaDto)
        {
            var arguments = new object[] { recuperacaoSenhaDto };
            var func = methodImpls.GetOrAdd("RedefinirSenhaComToken(RecuperacaoSenhaDto recuperacaoSenhaDto)", _ => requestBuilder.BuildRestResultFuncForMethod("RedefinirSenhaComToken", new Type[] { typeof(RecuperacaoSenhaDto) }));
            return (Task)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task<List<EstadoGetDto>> ListarEstados()
        {
            var arguments = new object[] {  };
            var func = methodImpls.GetOrAdd("ListarEstados()", _ => requestBuilder.BuildRestResultFuncForMethod("ListarEstados", new Type[] {  }));
            return (Task<List<EstadoGetDto>>)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task<CidadeGetDto> ObterCidadePorIdentificador(int identificador)
        {
            var arguments = new object[] { identificador };
            var func = methodImpls.GetOrAdd("ObterCidadePorIdentificador(int identificador)", _ => requestBuilder.BuildRestResultFuncForMethod("ObterCidadePorIdentificador", new Type[] { typeof(int) }));
            return (Task<CidadeGetDto>)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task<List<CidadeGetDto>> ListarCidades()
        {
            var arguments = new object[] {  };
            var func = methodImpls.GetOrAdd("ListarCidades()", _ => requestBuilder.BuildRestResultFuncForMethod("ListarCidades", new Type[] {  }));
            return (Task<List<CidadeGetDto>>)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task<List<CidadeGetDto>> ListarCidadesPorEstado(EnumEstadoBr estado)
        {
            var arguments = new object[] { estado };
            var func = methodImpls.GetOrAdd("ListarCidadesPorEstado(EnumEstadoBr estado)", _ => requestBuilder.BuildRestResultFuncForMethod("ListarCidadesPorEstado", new Type[] { typeof(EnumEstadoBr) }));
            return (Task<List<CidadeGetDto>>)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task<ClienteGetDto> ObterClientePorIdentificador(Guid identificador)
        {
            var arguments = new object[] { identificador };
            var func = methodImpls.GetOrAdd("ObterClientePorIdentificador(Guid identificador)", _ => requestBuilder.BuildRestResultFuncForMethod("ObterClientePorIdentificador", new Type[] { typeof(Guid) }));
            return (Task<ClienteGetDto>)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task<Paging<ClienteGetDto>> ListarClientesPaginado(GridifyQuery gridifyQuery)
        {
            var arguments = new object[] { gridifyQuery };
            var func = methodImpls.GetOrAdd("ListarClientesPaginado(GridifyQuery gridifyQuery)", _ => requestBuilder.BuildRestResultFuncForMethod("ListarClientesPaginado", new Type[] { typeof(GridifyQuery) }));
            return (Task<Paging<ClienteGetDto>>)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task CadastrarCliente(ClientePostDto clientePostDto)
        {
            var arguments = new object[] { clientePostDto };
            var func = methodImpls.GetOrAdd("CadastrarCliente(ClientePostDto clientePostDto)", _ => requestBuilder.BuildRestResultFuncForMethod("CadastrarCliente", new Type[] { typeof(ClientePostDto) }));
            return (Task)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task AtualizarCliente(ClientePutDto clientePutDto)
        {
            var arguments = new object[] { clientePutDto };
            var func = methodImpls.GetOrAdd("AtualizarCliente(ClientePutDto clientePutDto)", _ => requestBuilder.BuildRestResultFuncForMethod("AtualizarCliente", new Type[] { typeof(ClientePutDto) }));
            return (Task)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task AtivarDesativarCliente(Guid identificador)
        {
            var arguments = new object[] { identificador };
            var func = methodImpls.GetOrAdd("AtivarDesativarCliente(Guid identificador)", _ => requestBuilder.BuildRestResultFuncForMethod("AtivarDesativarCliente", new Type[] { typeof(Guid) }));
            return (Task)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task<FazendaGetDto> ObterFazendaPorIdentificador(Guid identificador)
        {
            var arguments = new object[] { identificador };
            var func = methodImpls.GetOrAdd("ObterFazendaPorIdentificador(Guid identificador)", _ => requestBuilder.BuildRestResultFuncForMethod("ObterFazendaPorIdentificador", new Type[] { typeof(Guid) }));
            return (Task<FazendaGetDto>)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task<Paging<FazendaGetDto>> ListarFazendasPaginado(GridifyQuery gridifyQuery)
        {
            var arguments = new object[] { gridifyQuery };
            var func = methodImpls.GetOrAdd("ListarFazendasPaginado(GridifyQuery gridifyQuery)", _ => requestBuilder.BuildRestResultFuncForMethod("ListarFazendasPaginado", new Type[] { typeof(GridifyQuery) }));
            return (Task<Paging<FazendaGetDto>>)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task CadastrarFazenda(FazendaPostDto fazendaPostDto)
        {
            var arguments = new object[] { fazendaPostDto };
            var func = methodImpls.GetOrAdd("CadastrarFazenda(FazendaPostDto fazendaPostDto)", _ => requestBuilder.BuildRestResultFuncForMethod("CadastrarFazenda", new Type[] { typeof(FazendaPostDto) }));
            return (Task)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task AtualizarFazenda(FazendaPutDto fazendaPutDto)
        {
            var arguments = new object[] { fazendaPutDto };
            var func = methodImpls.GetOrAdd("AtualizarFazenda(FazendaPutDto fazendaPutDto)", _ => requestBuilder.BuildRestResultFuncForMethod("AtualizarFazenda", new Type[] { typeof(FazendaPutDto) }));
            return (Task)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task AtivarDesativarFazenda(Guid identificador)
        {
            var arguments = new object[] { identificador };
            var func = methodImpls.GetOrAdd("AtivarDesativarFazenda(Guid identificador)", _ => requestBuilder.BuildRestResultFuncForMethod("AtivarDesativarFazenda", new Type[] { typeof(Guid) }));
            return (Task)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task<FornecedorGetDto> ObterFornecedorPorId(Guid idFornecedor)
        {
            var arguments = new object[] { idFornecedor };
            var func = methodImpls.GetOrAdd("ObterFornecedorPorId(Guid idFornecedor)", _ => requestBuilder.BuildRestResultFuncForMethod("ObterFornecedorPorId", new Type[] { typeof(Guid) }));
            return (Task<FornecedorGetDto>)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task<Paging<FornecedorGetDto>> ListarFornecedores(GridifyQuery gridifyQuery)
        {
            var arguments = new object[] { gridifyQuery };
            var func = methodImpls.GetOrAdd("ListarFornecedores(GridifyQuery gridifyQuery)", _ => requestBuilder.BuildRestResultFuncForMethod("ListarFornecedores", new Type[] { typeof(GridifyQuery) }));
            return (Task<Paging<FornecedorGetDto>>)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task AdicionarFornecedor(FornecedorPostDto novoFornecedorDto)
        {
            var arguments = new object[] { novoFornecedorDto };
            var func = methodImpls.GetOrAdd("AdicionarFornecedor(FornecedorPostDto novoFornecedorDto)", _ => requestBuilder.BuildRestResultFuncForMethod("AdicionarFornecedor", new Type[] { typeof(FornecedorPostDto) }));
            return (Task)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task EditarFornecedor(FornecedorPutDto novoFornecedorDto)
        {
            var arguments = new object[] { novoFornecedorDto };
            var func = methodImpls.GetOrAdd("EditarFornecedor(FornecedorPutDto novoFornecedorDto)", _ => requestBuilder.BuildRestResultFuncForMethod("EditarFornecedor", new Type[] { typeof(FornecedorPutDto) }));
            return (Task)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task AtivarDesativarFornecedor(Guid idFornecedor)
        {
            var arguments = new object[] { idFornecedor };
            var func = methodImpls.GetOrAdd("AtivarDesativarFornecedor(Guid idFornecedor)", _ => requestBuilder.BuildRestResultFuncForMethod("AtivarDesativarFornecedor", new Type[] { typeof(Guid) }));
            return (Task)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task<GrupoGetDto> ObterGrupoPorIdentificador(Guid identificador)
        {
            var arguments = new object[] { identificador };
            var func = methodImpls.GetOrAdd("ObterGrupoPorIdentificador(Guid identificador)", _ => requestBuilder.BuildRestResultFuncForMethod("ObterGrupoPorIdentificador", new Type[] { typeof(Guid) }));
            return (Task<GrupoGetDto>)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task<Paging<GrupoGetDto>> ListarGruposPaginado(GridifyQuery gridifyQuery)
        {
            var arguments = new object[] { gridifyQuery };
            var func = methodImpls.GetOrAdd("ListarGruposPaginado(GridifyQuery gridifyQuery)", _ => requestBuilder.BuildRestResultFuncForMethod("ListarGruposPaginado", new Type[] { typeof(GridifyQuery) }));
            return (Task<Paging<GrupoGetDto>>)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task CadastrarGrupo(GrupoPostDto grupoPost)
        {
            var arguments = new object[] { grupoPost };
            var func = methodImpls.GetOrAdd("CadastrarGrupo(GrupoPostDto grupoPost)", _ => requestBuilder.BuildRestResultFuncForMethod("CadastrarGrupo", new Type[] { typeof(GrupoPostDto) }));
            return (Task)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task AtualizarGrupo(GrupoPutDto grupoPut)
        {
            var arguments = new object[] { grupoPut };
            var func = methodImpls.GetOrAdd("AtualizarGrupo(GrupoPutDto grupoPut)", _ => requestBuilder.BuildRestResultFuncForMethod("AtualizarGrupo", new Type[] { typeof(GrupoPutDto) }));
            return (Task)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task AtivarDesativarGrupo(Guid identificador)
        {
            var arguments = new object[] { identificador };
            var func = methodImpls.GetOrAdd("AtivarDesativarGrupo(Guid identificador)", _ => requestBuilder.BuildRestResultFuncForMethod("AtivarDesativarGrupo", new Type[] { typeof(Guid) }));
            return (Task)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task<PicketGetDto> ObterPicketPorIdentificador(Guid identificador)
        {
            var arguments = new object[] { identificador };
            var func = methodImpls.GetOrAdd("ObterPicketPorIdentificador(Guid identificador)", _ => requestBuilder.BuildRestResultFuncForMethod("ObterPicketPorIdentificador", new Type[] { typeof(Guid) }));
            return (Task<PicketGetDto>)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task<Paging<PicketGetDto>> ListarPicketsPaginado(GridifyQuery gridifyQuery)
        {
            var arguments = new object[] { gridifyQuery };
            var func = methodImpls.GetOrAdd("ListarPicketsPaginado(GridifyQuery gridifyQuery)", _ => requestBuilder.BuildRestResultFuncForMethod("ListarPicketsPaginado", new Type[] { typeof(GridifyQuery) }));
            return (Task<Paging<PicketGetDto>>)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task CadastrarPicket(PicketPostDto picketPostDto)
        {
            var arguments = new object[] { picketPostDto };
            var func = methodImpls.GetOrAdd("CadastrarPicket(PicketPostDto picketPostDto)", _ => requestBuilder.BuildRestResultFuncForMethod("CadastrarPicket", new Type[] { typeof(PicketPostDto) }));
            return (Task)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task AtualizarPicket(PicketPutDto picketPutDto)
        {
            var arguments = new object[] { picketPutDto };
            var func = methodImpls.GetOrAdd("AtualizarPicket(PicketPutDto picketPutDto)", _ => requestBuilder.BuildRestResultFuncForMethod("AtualizarPicket", new Type[] { typeof(PicketPutDto) }));
            return (Task)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task AtivarDesativarPicket(Guid identificador)
        {
            var arguments = new object[] { identificador };
            var func = methodImpls.GetOrAdd("AtivarDesativarPicket(Guid identificador)", _ => requestBuilder.BuildRestResultFuncForMethod("AtivarDesativarPicket", new Type[] { typeof(Guid) }));
            return (Task)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task<RebanhoGetDto> ObterRebanhoPorIdentificador(Guid identificador)
        {
            var arguments = new object[] { identificador };
            var func = methodImpls.GetOrAdd("ObterRebanhoPorIdentificador(Guid identificador)", _ => requestBuilder.BuildRestResultFuncForMethod("ObterRebanhoPorIdentificador", new Type[] { typeof(Guid) }));
            return (Task<RebanhoGetDto>)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task<Paging<RebanhoGetDto>> ListarRebanhosPaginado(GridifyQuery gridifyQuery)
        {
            var arguments = new object[] { gridifyQuery };
            var func = methodImpls.GetOrAdd("ListarRebanhosPaginado(GridifyQuery gridifyQuery)", _ => requestBuilder.BuildRestResultFuncForMethod("ListarRebanhosPaginado", new Type[] { typeof(GridifyQuery) }));
            return (Task<Paging<RebanhoGetDto>>)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task CadastrarRebanho(RebanhoPostDto rebanhoPostDto)
        {
            var arguments = new object[] { rebanhoPostDto };
            var func = methodImpls.GetOrAdd("CadastrarRebanho(RebanhoPostDto rebanhoPostDto)", _ => requestBuilder.BuildRestResultFuncForMethod("CadastrarRebanho", new Type[] { typeof(RebanhoPostDto) }));
            return (Task)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task AtualizarRebanho(RebanhoPutDto rebanhoPutDto)
        {
            var arguments = new object[] { rebanhoPutDto };
            var func = methodImpls.GetOrAdd("AtualizarRebanho(RebanhoPutDto rebanhoPutDto)", _ => requestBuilder.BuildRestResultFuncForMethod("AtualizarRebanho", new Type[] { typeof(RebanhoPutDto) }));
            return (Task)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task AtivarDesativarRebanho(Guid identificador)
        {
            var arguments = new object[] { identificador };
            var func = methodImpls.GetOrAdd("AtivarDesativarRebanho(Guid identificador)", _ => requestBuilder.BuildRestResultFuncForMethod("AtivarDesativarRebanho", new Type[] { typeof(Guid) }));
            return (Task)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task<UsuarioGetDto> ObterUsuarioPorIdentificador(Guid identificador)
        {
            var arguments = new object[] { identificador };
            var func = methodImpls.GetOrAdd("ObterUsuarioPorIdentificador(Guid identificador)", _ => requestBuilder.BuildRestResultFuncForMethod("ObterUsuarioPorIdentificador", new Type[] { typeof(Guid) }));
            return (Task<UsuarioGetDto>)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task<Paging<UsuarioGetDto>> ListarUsuariosPaginado(GridifyQuery gridifyQuery)
        {
            var arguments = new object[] { gridifyQuery };
            var func = methodImpls.GetOrAdd("ListarUsuariosPaginado(GridifyQuery gridifyQuery)", _ => requestBuilder.BuildRestResultFuncForMethod("ListarUsuariosPaginado", new Type[] { typeof(GridifyQuery) }));
            return (Task<Paging<UsuarioGetDto>>)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task CadastrarUsuario(UsuarioPostDto usuarioPostDto)
        {
            var arguments = new object[] { usuarioPostDto };
            var func = methodImpls.GetOrAdd("CadastrarUsuario(UsuarioPostDto usuarioPostDto)", _ => requestBuilder.BuildRestResultFuncForMethod("CadastrarUsuario", new Type[] { typeof(UsuarioPostDto) }));
            return (Task)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task AtualizarUsuario(UsuarioPutDto usuarioPutDto)
        {
            var arguments = new object[] { usuarioPutDto };
            var func = methodImpls.GetOrAdd("AtualizarUsuario(UsuarioPutDto usuarioPutDto)", _ => requestBuilder.BuildRestResultFuncForMethod("AtualizarUsuario", new Type[] { typeof(UsuarioPutDto) }));
            return (Task)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task AtivarDesativarUsuario(Guid identificador)
        {
            var arguments = new object[] { identificador };
            var func = methodImpls.GetOrAdd("AtivarDesativarUsuario(Guid identificador)", _ => requestBuilder.BuildRestResultFuncForMethod("AtivarDesativarUsuario", new Type[] { typeof(Guid) }));
            return (Task)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task SolicitarRedefinicaoSenhaUsuario(Guid identificador)
        {
            var arguments = new object[] { identificador };
            var func = methodImpls.GetOrAdd("SolicitarRedefinicaoSenhaUsuario(Guid identificador)", _ => requestBuilder.BuildRestResultFuncForMethod("SolicitarRedefinicaoSenhaUsuario", new Type[] { typeof(Guid) }));
            return (Task)func(Client, arguments);
        }

        /// <inheritdoc />
        public virtual Task AtualizarSenhaUsuario(Guid identificador,string senha)
        {
            var arguments = new object[] { identificador,senha };
            var func = methodImpls.GetOrAdd("AtualizarSenhaUsuario(Guid identificador,string senha)", _ => requestBuilder.BuildRestResultFuncForMethod("AtualizarSenhaUsuario", new Type[] { typeof(Guid),typeof(string) }));
            return (Task)func(Client, arguments);
        }

    }
}
